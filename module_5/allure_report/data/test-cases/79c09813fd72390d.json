{
  "uid" : "79c09813fd72390d",
  "name" : "test_guest_cant_see_success_message_after_adding_product_to_basket",
  "fullName" : "module_5.test_product_page.TestProductPage#test_guest_cant_see_success_message_after_adding_product_to_basket",
  "historyId" : "73a493c161f5189f89249bf7a7c46bd7",
  "time" : {
    "start" : 1608057453452,
    "stop" : 1608057457771,
    "duration" : 4319
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL Test is expected to fall.\n\nAssertionError: Success message is presented, but should not be",
  "statusTrace" : "self = <module_5.test_product_page.TestProductPage object at 0x0000021B63F04190>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c64a305137b8d4c90faa8050e674b397\")>\n\n    @pytest.mark.xfail(reason=\"Test is expected to fall.\")\n    def test_guest_cant_see_success_message_after_adding_product_to_basket(self, browser):\n        # Arrange\n        product_page = ProductPage(browser, product_link)\n        product_page.open()\n    \n        # Assert\n        product_page.add_product_to_basket()\n>       product_page.should_not_be_success_message()\n\nmodule_5\\test_product_page.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <module_5.pages.product_page.ProductPage object at 0x0000021B636A93A0>\n\n    def should_not_be_success_message(self):\n        # Assert\n>       assert self.is_not_element_present(*ProductPageLocators.SUCCESS_MESSAGE), \\\n            \"Success message is presented, but should not be\"\nE       AssertionError: Success message is presented, but should not be\n\nmodule_5\\pages\\product_page.py:41: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1608057451758,
      "stop" : 1608057453448,
      "duration" : 1690
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL Test is expected to fall.\n\nAssertionError: Success message is presented, but should not be",
    "statusTrace" : "self = <module_5.test_product_page.TestProductPage object at 0x0000021B63F04190>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c64a305137b8d4c90faa8050e674b397\")>\n\n    @pytest.mark.xfail(reason=\"Test is expected to fall.\")\n    def test_guest_cant_see_success_message_after_adding_product_to_basket(self, browser):\n        # Arrange\n        product_page = ProductPage(browser, product_link)\n        product_page.open()\n    \n        # Assert\n        product_page.add_product_to_basket()\n>       product_page.should_not_be_success_message()\n\nmodule_5\\test_product_page.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <module_5.pages.product_page.ProductPage object at 0x0000021B636A93A0>\n\n    def should_not_be_success_message(self):\n        # Assert\n>       assert self.is_not_element_present(*ProductPageLocators.SUCCESS_MESSAGE), \\\n            \"Success message is presented, but should not be\"\nE       AssertionError: Success message is presented, but should not be\n\nmodule_5\\pages\\product_page.py:41: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3e13658ca8f1b9de",
      "name" : "stdout",
      "source" : "3e13658ca8f1b9de.txt",
      "type" : "text/plain",
      "size" : 154
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1608057457782,
      "stop" : 1608057460082,
      "duration" : 2300
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.xfail(reason='Test is expected to fall.')"
  }, {
    "name" : "tag",
    "value" : "to_basket"
  }, {
    "name" : "parentSuite",
    "value" : "module_5"
  }, {
    "name" : "suite",
    "value" : "test_product_page"
  }, {
    "name" : "subSuite",
    "value" : "TestProductPage"
  }, {
    "name" : "host",
    "value" : "Netbook"
  }, {
    "name" : "thread",
    "value" : "13396-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "module_5.test_product_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ "to_basket", "@pytest.mark.xfail(reason='Test is expected to fall.')" ]
  },
  "source" : "79c09813fd72390d.json",
  "parameterValues" : [ ]
}